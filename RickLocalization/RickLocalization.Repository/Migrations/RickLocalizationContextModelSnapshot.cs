// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RickLocalization.Repository.EF;

namespace RickLocalization.Repository.Migrations
{
    [DbContext(typeof(RickLocalizationContext))]
    partial class RickLocalizationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RickLocalization.Domain.Entities.Dimensao", b =>
                {
                    b.Property<int>("DimensaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataOperacao")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NaturezaOperacao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.HasKey("DimensaoId");

                    b.ToTable("Dimensao", "dbo");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Rick", b =>
                {
                    b.Property<int>("RickId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataOperacao")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("DimensaoId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("NaturezaOperacao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RickId");

                    b.HasIndex("DimensaoId");

                    b.ToTable("Rick", "dbo");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Viagem", b =>
                {
                    b.Property<int>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataOperacao")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataViagem")
                        .HasColumnType("datetime");

                    b.Property<int>("DimensaoId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NaturezaOperacao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<int>("RickId")
                        .HasColumnType("int");

                    b.HasKey("ViagemId");

                    b.HasIndex("DimensaoId");

                    b.HasIndex("RickId");

                    b.ToTable("Viagem", "dbo");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Rick", b =>
                {
                    b.HasOne("RickLocalization.Domain.Entities.Dimensao", "Dimensao")
                        .WithMany("Rickis")
                        .HasForeignKey("DimensaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dimensao");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Viagem", b =>
                {
                    b.HasOne("RickLocalization.Domain.Entities.Dimensao", "Dimensao")
                        .WithMany("Viagens")
                        .HasForeignKey("DimensaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RickLocalization.Domain.Entities.Rick", "Rick")
                        .WithMany("Viagens")
                        .HasForeignKey("RickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dimensao");

                    b.Navigation("Rick");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Dimensao", b =>
                {
                    b.Navigation("Rickis");

                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("RickLocalization.Domain.Entities.Rick", b =>
                {
                    b.Navigation("Viagens");
                });
#pragma warning restore 612, 618
        }
    }
}
